variable "s3_bucket" {
  description = "The bucket for hosting static"
  type = object({
    create_bucket                              = optional(bool, true)
    attach_elb_log_delivery_policy             = optional(bool, false)
    attach_lb_log_delivery_policy              = optional(bool, false)
    attach_access_log_delivery_policy          = optional(bool, false)
    attach_deny_insecure_transport_policy      = optional(bool, false)
    attach_require_latest_tls_policy           = optional(bool, false)
    attach_policy                              = optional(bool, false)
    attach_public_policy                       = optional(bool, true)
    attach_inventory_destination_policy        = optional(bool, false)
    attach_analytics_destination_policy        = optional(bool, false)
    attach_deny_incorrect_encryption_headers   = optional(bool, false)
    attach_deny_incorrect_kms_key_sse          = optional(bool, false)
    allowed_kms_key_arn                        = optional(string, "")
    attach_deny_unencrypted_object_uploads     = optional(bool, false)
    bucket_name_suffix                         = optional(string, "grafana-tempo-data")
    bucket                                     = optional(string, "")
    bucket_prefix                              = optional(string, null)
    acl                                        = optional(string, null)
    policy                                     = optional(string, null)
    tags                                       = optional(map(string), {})
    force_destroy                              = optional(bool, false)
    acceleration_status                        = optional(string, null)
    request_payer                              = optional(string, null)
    website                                    = optional(any, {})
    cors_rule                                  = optional(any, [])
    versioning                                 = optional(map(string), {})
    logging                                    = optional(any, {})
    access_log_delivery_policy_source_buckets  = optional(list(string), [])
    access_log_delivery_policy_source_accounts = optional(list(string), [])
    grant                                      = optional(any, [])
    owner                                      = optional(map(string), {})
    expected_bucket_owner                      = optional(string, null)
    lifecycle_rule                             = optional(any, [])
    replication_configuration                  = optional(any, {})
    server_side_encryption_configuration       = optional(any, {})
    intelligent_tiering                        = optional(any, {})
    object_lock_configuration                  = optional(any, {})
    metric_configuration                       = optional(any, {})
    inventory_configuration                    = optional(any, {})
    inventory_source_account_id                = optional(string, null)
    inventory_source_bucket_arn                = optional(string, null)
    inventory_self_source_destination          = optional(bool, false)
    analytics_configuration                    = optional(any, {})
    analytics_source_account_id                = optional(string, null)
    analytics_source_bucket_arn                = optional(string, null)
    analytics_self_source_destination          = optional(bool, false)
    object_lock_enabled                        = optional(bool, false)
    block_public_acls                          = optional(bool, true)
    block_public_policy                        = optional(bool, true)
    ignore_public_acls                         = optional(bool, true)
    restrict_public_buckets                    = optional(bool, true)
    control_object_ownership                   = optional(bool, false)
    object_ownership                           = optional(string, "BucketOwnerEnforced")
    putin_khuylo                               = optional(bool, true)
  })
  default = {}
}

variable "iam_policy_role" {
  description = "The bucket for hosting static"
  type = object({
    create                        = optional(bool, true)
    path                          = optional(string, "/")
    policy_description            = optional(string, "")
    policy_name                   = optional(string, "")
    role_name                     = optional(string, "")
    role_permissions_boundary_arn = optional(string, null)
    oidc_providers                = optional(any, {})
    tags                          = optional(map(string), {})
  })
  default = {}
}
